name: Build Docs

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - doc/**/*.md

concurrency:
  group: build-gh-pages
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-adrs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: create file list
        id: files_list
        working-directory: doc/adr
        run: |
          echo "files=$(printf '"doc/adr/%s" ' *.md)" > $GITHUB_OUTPUT

      - name: list files
        run: echo "${{ steps.files_list.outputs.files }}"

      - uses: docker://pandoc/latex:latest
        with:
          args: >-
            --output=./adrs.pdf
            --resource-path=doc/adr
            --resource-path=.
            ${{ steps.files_list.outputs.files }}

      - uses: actions/upload-artifact@v4
        with:
          name: adrs
          path: adrs.pdf

  build-contributions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker://pandoc/latex:latest
        with:
          args: >-
            --output=./contribution.pdf
            --resource-path=doc/
            --resource-path=.
            doc/contributions_log.md

      - uses: actions/upload-artifact@v4
        with:
          name: contribution
          path: contribution.pdf

  find-exercises:
    runs-on: ubuntu-latest
    outputs:
      files_list: ${{ steps.files_list.outputs.files }}
    steps:
      - uses: actions/checkout@v4

      - name: create file list
        id: files_list
        working-directory: doc/exercises
        run: |
          echo files=$(jq -n --argjson files "$(printf 'doc/exercises/%s\n' *.md | jq -R . | jq -s .)" '$files') > $GITHUB_OUTPUT

      - name: list files
        run: echo "${{ fromJson(steps.files_list.outputs.files) }}"

  build-exercises:
    runs-on: ubuntu-latest
    name: Build Exercise ${{ matrix.file }}
    needs: find-exercises
    strategy:
      matrix:
        file: ${{fromJson(needs.find-exercises.outputs.files_list)}}
    steps:
      - uses: actions/checkout@v4

      - name: prepare vars
        id: vars
        run: |
          ex_pdf=$(basename "${{ matrix.file }}" | sed "s/\.md/.pdf/")
          ex=$(basename "${{ matrix.file }}" | sed "s/\.md//")
          echo "ex_pdf=$ex_pdf" > $GITHUB_OUTPUT
          echo "ex=$ex" >> $GITHUB_OUTPUT

      - uses: docker://pandoc/latex:latest
        with:
          args: >-
            --output=./${{ steps.vars.outputs.ex_pdf }}
            --resource-path=doc/
            --resource-path=doc/exercises/
            --resource-path=.
            ${{ matrix.file }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.vars.outputs.ex }}
          path: ${{ steps.vars.outputs.ex_pdf }}

  build:
    runs-on: ubuntu-latest
    needs:
      - build-adrs
      - build-contributions
      - build-exercises
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: ./.github/pages/
          merge-multiple: true

      - name: Prepare Pages Templates
        working-directory: ./.github/pages
        run: |
          files=""
          for file in *.pdf; do
            sed "s|__FILE__|$file|g" _template.html > "$file.html"
            files="$files <li><a href='$file.html'>$file</a></li>"
          done
          sed "s|__FILES__|$files|g" _index.html > index.html

      - run: echo $(ls -la ./.github/pages)

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Upload PDF artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.github/pages/

  deploy_gh_pages:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

@using Inventory.Database
@using Microsoft.AspNetCore.SignalR.Client

@inject NotificationStore Store
@inject NavigationManager Navigation

@rendermode InteractiveServer

@implements IDisposable

<div style="height: 24rem; overflow: auto">
    @foreach (var notification in Store.Notifications.OrderByDescending(n => n.Date))
    {
        <MudPaper Outlined="true" Class="mb-4 pa-2">
            <MudGrid>
                <MudItem xs="12">
                    <MudText Typo="Typo.subtitle2">@notification.Title</MudText>
                    @if (notification.Detail is not null)
                    {
                        <MudText Typo="Typo.body2">@notification.Detail</MudText>
                    }
                    <MudText Typo="Typo.caption">@notification.Date.ToString("dd.MM.yyyy - HH:mm:ss")</MudText>
                </MudItem>
            </MudGrid>
        </MudPaper>
    }
</div>

@code {

    private readonly List<Notification> _notifications = new();

    protected override async Task OnInitializedAsync()
    {
        Store.OnChange += NotificationReceived;
        await base.OnInitializedAsync();
    }

    public void Dispose() => Store.OnChange -= NotificationReceived;

    private void NotificationReceived() => InvokeAsync(StateHasChanged);

}

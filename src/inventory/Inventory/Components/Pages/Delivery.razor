@page "/delivery"
@using Inventory.Database
@using Inventory.Kafka
@using Inventory.Proto.Commands.Inventory.V1

@inject KafkaFactory Factory
@inject NavigationManager NavigationManager
@inject NotificationStore Notifications

@rendermode InteractiveServer

<PageTitle>Inventory Warehouse System - New Delivery</PageTitle>

<MudLink Href="/">
    <MudButton>
        <MudIcon Icon="@Icons.Material.Filled.ArrowLeft"/>
        Back to Dashboard
    </MudButton>
</MudLink>

<MudCard>
    <MudCardContent>
        <MudText Align="Align.Center" GutterBottom="true">Create Delivery Notice</MudText>
        <MudText Align="Align.Center" GutterBottom="true">
            Select the blocks that are filled with inventory.
            The inventory system will then determine the color of the
            blocks and store them in the inventory.
        </MudText>
        <div
            style="margin-top: 2rem; margin-bottom: 2rem; display: grid; grid-template-columns: 120px 120px 120px; gap: 8px; justify-content: center;">
            @for (var i = 0; i < 9; i++)
            {
                var idx = i;
                <FormBlock Filled="_colors[idx]" OnClick="@(() => SelectBlock(idx))"/>
            }
        </div>
        <div style="text-align: end;">
            <MudButton OnClick="@(() => StartInventoryProcess())" Variant="Variant.Filled" Color="Color.Primary">Start
                Inventory Process
            </MudButton>
        </div>
    </MudCardContent>
</MudCard>

@code {

    private readonly bool[] _colors = new bool[9];

    private void SelectBlock(int idx)
    {
        _colors[idx] = !_colors[idx];
        StateHasChanged();
    }

    private async Task StartInventoryProcess()
    {
        if (_colors.All(b => !b))
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        var cmd = new ProcessNewShipment
        {
            ShipmentId = Guid.NewGuid().ToString(),
            Blocks = {_colors},
        };
        await Factory.SendMessage("commands", cmd);
        Notifications.Add(new("Starting Inventory Process"));
        NavigationManager.NavigateTo("/");
    }

}
